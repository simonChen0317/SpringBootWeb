#配置数据库连接信息.spring boot数据库配置方式1：自定义连接方式，通过spring.datasource.*选项设定数据源的链接地址、连接驱动器、用户名及密码。
spring.datasource.name=sampleDs
spring.datasource.url=jdbc:mysql://localhost:3306/sampledb
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#指定自定义连接池。默认情况下Boot启动器自动创建tomcat-jdbc连接池，如果不想使用默认的连接池，则可以通过spring.datasource.type手工指定项目所需的连接池（如DBCP、C3P0）
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#连接池配置信息
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=select 1

#配置JNDI数据源。springboot数据库连接方式2：通过JNDI方式设置，只需要为spring.datasource.jndi-name属性指定一个JNDI链接名称即可。在生产环境中通常会采用此种方式，
#spring.datasource.jndi-name=java:comp/env/jdbc/sampleDs

#初始化数据库脚本
#spring boot中提供了灵活的数据库初始化方式，可以设定DDl脚本，也可以设定DML脚本。如下：spring.datasource.initialize属性设置启动的时候是否进行初始化；
#spring.datasource.platform属性设置DML脚本文件名称，在启动的时候会从类跟路径加载data-${platform}.sql文件执行，其中${platform}为当前数据库类型，本例配置会加载data-mysql.sql;spring.datasource.schema属性设置DDL脚本文件名称。
#在启动的时候会从类根路径加载schema-mysql.sql文件执行。

#spring.datasource.initialize=true
#spring.datasource.platform=mysql
#spring.datasource.data=data
#spring.datasource.schema=schema

#logging.level.com.springboot=debug
#logging.level.org.springframework.web=debug
#修改端口号
server.port=8000

#通过spring.mvc.view.prefix属性指定试图路径的前缀，通过spring.mvc.view.suffix属性指定视图的后缀。
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp